{"version":3,"sources":["components/Note.js","components/Notification.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","importance","important","className","content","onClick","Notification","message","url","axios","get","then","res","data","newObject","post","id","put","App","props","useState","notes","setNotes","newNote","setNewNote","displayAllNotes","setDisplayAllNotes","errorMessage","setErrorMessage","useEffect","noteService","notesToDisplay","filter","map","key","find","n","catch","err","setTimeout","onSubmit","e","preventDefault","noteObj","date","Date","toISOString","Math","random","concat","document","querySelector","reset","placeholder","onChange","target","value","type","response","ReactDOM","render","getElementById"],"mappings":"uOAeeA,EAbF,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,iBACXC,EAAaF,EAAKG,UAClB,qBACA,iBAEN,OACI,wBAAIC,UAAU,QACTJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,KCGjCK,EAXM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACnB,OAAIA,EAIA,yBAAKJ,UAAU,SACVI,GAJE,M,gBCFTC,EAAM,6CAiBG,EAfA,WAEX,OADYC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAahB,EAVA,SAAAC,GAEX,OADYL,IAAMM,KAAKP,EAAKM,GACjBH,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAQhB,EALA,SAACG,EAAIF,GAEhB,OADYL,IAAMQ,IAAN,UAAaT,EAAb,YAAoBQ,GAAMF,GAC3BH,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SCyFhBK,EAnGH,SAACC,GAAW,IAAD,EACOC,mBAAS,IADhB,mBACZC,EADY,KACLC,EADK,OAEWF,mBAAS,IAFpB,mBAEZG,EAFY,KAEHC,EAFG,OAG2BJ,oBAAS,GAHpC,mBAGZK,EAHY,KAGKC,EAHL,OAIqBN,mBAAS,IAJ9B,mBAIZO,EAJY,KAIEC,EAJF,KAMnBC,qBAAU,WAMNC,IAEKnB,MAAK,SAAAC,GACFU,EAASV,QAElB,IAEH,IAAMmB,EAAiBN,EAAkBJ,EAAQA,EAAMW,QAAO,SAAAjC,GAAI,OAAuB,IAAnBA,EAAKG,aA4D3E,OACI,6BACI,qCACA,kBAAC,EAAD,CAAcK,QAASoB,IACvB,6BACI,4BAAQtB,QAPa,kBAAMqB,GAAoBD,KAO/C,WACaA,EAAiB,YAAa,OAF/C,yBAGoCA,EAAiB,MAAQ,aAE7D,4BA5CmBM,EAAeE,KAAI,SAAAlC,GAC1C,OACI,kBAAC,EAAD,CAAMmC,IAAKnC,EAAKiB,GAAIjB,KAAMA,EAAMC,kBAzBdgB,EAyBiDjB,EAAKiB,GAzB/C,WAC7B,IAAMjB,EAAOsB,EAAMc,MAAK,SAAAC,GAAC,OAAIA,EAAEpB,KAAOA,KAChCO,EAAO,eAAOxB,EAAP,CAAaG,WAAWH,EAAKG,YAO1C4B,EACYd,EAAIO,GACXZ,MAAK,SAAAC,GACFU,EAASD,EAAMY,KAAI,SAAAlC,GAAI,OAAIA,EAAKiB,KAAOA,EAAKJ,EAAMb,SAErDsC,OAAM,SAAAC,GACHV,EAAgB,sCAAD,OAAuCZ,IACtDuB,YAAW,WACPX,EAAgB,QACjB,KACHN,EAASD,EAAMW,QAAO,SAAAI,GAAC,OAAIA,EAAEpB,KAAOA,aAnBvB,IAACA,MAsElB,0BAAMb,UAAU,WAAWqC,SAzCnB,SAACC,GACbA,EAAEC,iBACF,IAAMC,EAAU,CACZvC,QAASmB,EACTqB,MAAM,IAAIC,MAAOC,cACjB5C,UAAW6C,KAAKC,SAAW,IAS/BlB,EACYa,GACPhC,MAAK,SAAAC,GACFU,EAASD,EAAM4B,OAAOrC,IACtBY,EAAW,OAEnB0B,SAASC,cAAc,aAAaC,UAsB5B,2BAAOC,YAAY,mBAAmBC,SAnBzB,SAACb,GACtBjB,EAAWiB,EAAEc,OAAOC,UAmBZ,4BAAQC,KAAK,UAAb,W,MC1FhBhD,IACGC,IAHS,8CAITC,MAAK,SAAA+C,OAyBRC,IAASC,OACP,kBAAC,EAAD,MACAV,SAASW,eAAe,W","file":"static/js/main.7f50f3d6.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({note, toggleImportance}) => {\r\n    const importance = note.important \r\n        ? 'make not important'\r\n        : 'make important'\r\n\r\n    return (\r\n        <li className='note'>\r\n            {note.content}\r\n            <button onClick={toggleImportance}>{importance}</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Note","import React from 'react'\r\n\r\nconst Notification = ({message}) => {\r\n    if(!message) {\r\n        return null\r\n    }\r\n    return (\r\n        <div className='error'>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\n// const url = 'http://localhost:3001/notes'\r\nconst url = 'https://dry-cove-65105.herokuapp.com/notes'\r\n\r\nconst getAll = () => {\r\n    const req = axios.get(url)\r\n    return req.then(res => res.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const req = axios.post(url, newObject)\r\n    return req.then(res => res.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const req = axios.put(`${url}/${id}`, newObject)\r\n    return req.then(res => res.data)\r\n}\r\n\r\nexport default {\r\n    getAll, create, update\r\n}","import React, {useState, useEffect} from 'react'\r\n// import axios from 'axios'\r\nimport Note from './components/Note.js'\r\nimport Notification from './components/Notification.js'\r\nimport noteService from './services/notes.js'\r\n\r\nconst App = (props) => {\r\n    const [notes, setNotes] = useState([])\r\n    const [newNote, setNewNote] = useState('')\r\n    const [displayAllNotes, setDisplayAllNotes] = useState(true)\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n\r\n    useEffect(() => {\r\n        // axios\r\n        //     .get('http://localhost:3001/notes')\r\n        //     .then(r => {\r\n        //         setNotes(r.data)\r\n        //     })\r\n        noteService\r\n            .getAll()\r\n            .then(res => {\r\n                setNotes(res)\r\n            })\r\n    }, [])\r\n\r\n    const notesToDisplay = displayAllNotes ? notes : notes.filter(note => note.important === true)\r\n\r\n    const toggleImportance = (id) => () => {\r\n        const note = notes.find(n => n.id === id)\r\n        const newNote = {...note, important:!note.important}\r\n        \r\n        // axios\r\n        //     .put(`http://localhost:3001/notes/${id}`, newNote)\r\n        //     .then(r => {\r\n        //         setNotes(notes.map(note => note.id === id ? r.data : note))\r\n        //     })\r\n        noteService\r\n            .update(id, newNote)\r\n            .then(res => {\r\n                setNotes(notes.map(note => note.id === id ? res : note))\r\n            })\r\n            .catch(err => {\r\n                setErrorMessage(`an error has occured with note id: ${id}`)\r\n                setTimeout(() => {\r\n                    setErrorMessage(null)\r\n                }, 5000)\r\n                setNotes(notes.filter(n => n.id !== id))\r\n            })\r\n    }\r\n\r\n    const displayNotes = () => notesToDisplay.map(note => {\r\n        return (\r\n            <Note key={note.id} note={note} toggleImportance={toggleImportance(note.id)}/>\r\n        )\r\n    })\r\n\r\n    const addNote = (e) => {\r\n        e.preventDefault()\r\n        const noteObj = {\r\n            content: newNote,\r\n            date: new Date().toISOString(),\r\n            important: Math.random() > 0.5,\r\n        }\r\n\r\n        // axios\r\n        //     .post('http://localhost:3001/notes', noteObj)\r\n        //     .then(r => {\r\n        //         setNotes(notes.concat(r.data))\r\n        //         setNewNote('')\r\n        //     })\r\n        noteService\r\n            .create(noteObj)\r\n            .then(res => {\r\n                setNotes(notes.concat(res))\r\n                setNewNote('')\r\n            })\r\n        document.querySelector('.NoteForm').reset()\r\n    }\r\n\r\n    const handleNoteChange = (e) => {\r\n        setNewNote(e.target.value)\r\n    }\r\n\r\n    const handleNotesDisplay = () => () => setDisplayAllNotes(!displayAllNotes)\r\n\r\n    return (\r\n        <div>\r\n            <h1>Notes</h1>\r\n            <Notification message={errorMessage} />\r\n            <div>\r\n                <button onClick={handleNotesDisplay()}>\r\n                    Display {displayAllNotes? 'Important': 'All'}\r\n                </button> Currently displaying {displayAllNotes? 'all' : 'important'}\r\n            </div>\r\n            <ul>\r\n                {displayNotes()}\r\n            </ul>\r\n            <form className=\"NoteForm\" onSubmit={addNote}>\r\n                <input placeholder='type a note here' onChange={handleNoteChange} />\r\n                <button type=\"submit\">Save</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App.js'\nimport axios from 'axios'\nimport './index.css'\n\n// const url = 'http://localhost:3001/notes'\nconst url = 'https://dry-cove-65105.herokuapp.com/notes'\n\naxios\n  .get(url)\n  .then(response => {\n  // console.log(response)\n})\n\nconst notes = [\n  {\n    id: 1,\n    content: 'HTML is easy',\n    date: '2019-05-30T17:30:31.098Z',\n    important: true\n  },\n  {\n    id: 2,\n    content: 'Browser can execute only Javascript',\n    date: '2019-05-30T18:39:34.091Z',\n    important: false\n  },\n  {\n    id: 3,\n    content: 'GET and POST are the most important methods of HTTP protocol',\n    date: '2019-05-30T19:20:14.298Z',\n    important: true\n  }\n]\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}